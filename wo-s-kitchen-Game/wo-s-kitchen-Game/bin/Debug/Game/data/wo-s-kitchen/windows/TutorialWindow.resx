<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="owl_Tutorial_what_1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>